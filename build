# Telgram env setup
export BOT_MSG_URL="https://api.telegram.org/bot$API_BOT/sendMessage"
export BOT_BUILD_URL="https://api.telegram.org/bot$API_BOT/sendDocument"

tg_post_msg() {
 curl -s -X POST "$BOT_MSG_URL" -d chat_id="$2" \
 -d "parse_mode=html" \
 -d text="$1"
}

tg_post_msg "<b>Starting Build</b>" "$CHATID"

#!/bin/bash
cd /tmp/rom # Depends on where source got synced

# Normal build steps
. build/envsetup.sh
lunch legion_miatoll-userdebug
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 30G # It took only 6.4GB for mido
ccache -o compression=true # Will save times and data to download and upload ccache, also negligible performance issue
ccache -z # Clear old stats, so monitor script will provide real ccache statistics

# Next 8 lines should be run first to collect ccache and then upload, after doning it 1 or 2 times, our ccache will help to build without these 8 lines.
make api-stubs-docs || echo no problem, we need ccache
make system-api-stubs-docs || echo no problem we need ccache
make test-api-stubs-docs || echo no problem, we need ccache
make legion -j12 & # dont remove that '&'
sleep 80m
kill %1
ccache -s
#and dont use below codes for first 1 or 2 times, to get ccache uploaded,


# upload function for uploading rom zip file! I don't want unwanted builds in my google drive haha!
#up(){
#	curl --upload-file $1 https://transfer.sh/$(basename $1); echo
	# 14 days, 10 GB limit

#}

# It's recommended to use google drive(rclone) as upload solution for coping with the time limit. Un-comment next 3 lines to upload with rclone in drive. Also change apon and junk according to your config name, uploading folder of drive
#up(){
#	time rclone copy $1 apon:junk -P # apon is my rclone config name, 
#}

# Upload rom zip file if succeed to build! Send notification to tg! And send shell to tg if build fails!

# Let's compile by parts! Coz of ram issue!
#make api-stubs-docs || echo no problem
#make system-api-stubs-docs || echo no problem
#make test-api-stubs-docs || echo no problem

#make legion -j10 \
#	&& send_zip=$(up out/target/product/miatoll/*zip)

#ccache -s # Let's print ccache statistics finally
tg_post_msg "Build Success https://cirrus-ci.com/build/$CIRRUS_BUILD_ID" "$CHATID"
